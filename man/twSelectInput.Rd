% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/twSelectInput.R
\name{twSelectInput}
\alias{twSelectInput}
\title{Wrapper around \code{\link[shiny:selectInput]{shiny::selectInput()}} but allowing for more classes}
\usage{
twSelectInput(
  inputId,
  label = NULL,
  choices,
  selected = NULL,
  multiple = FALSE,
  container_class = NULL,
  label_class = NULL,
  select_class = NULL
)
}
\arguments{
\item{inputId}{The \code{input} slot that will be used to access the value.}

\item{label}{Display label for the control, or \code{NULL} for no label.}

\item{choices}{List of values to select from. If elements of the list are
named, then that name --- rather than the value --- is displayed to the
user. It's also possible to group related inputs by providing a named list
whose elements are (either named or unnamed) lists, vectors, or factors. In
this case, the outermost names will be used as the group labels (leveraging
the \verb{<optgroup>} HTML tag) for the elements in the respective sublist. See
the example section for a small demo of this feature.}

\item{selected}{The initially selected value (or multiple values if \code{multiple = TRUE}). If not specified then defaults to the first value for
single-select lists and no values for multiple select lists.}

\item{multiple}{Is selection of multiple items allowed?}

\item{container_class}{additional classes to be applied to the container}

\item{label_class}{additional classes to be applied to the label}

\item{select_class}{additional classes to be applied to the select elements}
}
\description{
Note selectize is turned off (for now)
}
\examples{
twSelectInput(
  "variable", "Variable:",
  c("Cylinders" = "cyl", "Transmission" = "am", "Gears" = "gear"),
  # Apply tailwind classes
  container_class = "rounded-tl-lg bg-teal-500 m-4 p-2",
  label_class = "font-serif",
  select_class = "drop-shadow-lg font-mono"
)

if (interactive()) {
library(shiny)
# basic example
shinyApp(
    ui = fluidPage(
        use_tailwind(),
        twSelectInput(
          "variable", "Variable:",
          c("Cylinders" = "cyl", "Transmission" = "am", "Gears" = "gear"),
          # Apply tailwind classes
          container_class = "rounded-tl-lg bg-teal-500 m-4 p-2",
          label_class = "font-serif",
          select_class = "drop-shadow-lg font-mono"
        ),
        tableOutput("data")
    ),
    server = function(input, output) {
        output$data <- renderTable({
            mtcars[, c("mpg", input$variable), drop = FALSE]
        }, rownames = TRUE)
    }
)
}
}
\seealso{
\code{\link[shiny:selectInput]{shiny::selectInput()}}
}
